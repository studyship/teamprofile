{"version":3,"sources":["images/hr.jpeg","images/sm.jpeg","images/gw.jpeg","images/hg.jpeg","images/ts.jpeg","ScrollDownIndicator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Container","styled","div","animate","keyframes","Down","ScrollDownIndicator","Team","section","Next","Contents","Row","marginTop","H1","h1","P","p","Column","ImgBox","Image","img","Details","Name","h3","Job","span","IconWrapper","ul","IconBox","li","App","useEffect","document","body","style","margin","backgroundColor","values","isSelected","comment","title","job","thumbnail","HRProfile","SMProfile","GWProfile","HGProfile","TSProfile","useState","profileValues","setProfileValues","map","value","index","onClick","updateValues","item","i","handleClick","src","activeClass","className","to","spy","smooth","duration","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fa9deab0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hr.8f7ebfb5.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/sm.8f697f6c.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/gw.c4153cf3.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/hg.9c5c497b.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/ts.12f0627e.jpeg\";","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst Container = styled.div`\n  cursor: pointer;\n`;\nconst animate = keyframes`\n  from {\n    opacity:0;\n    transform: rotate(45deg) translate(-20px, -20px);\n  }\n  to {\n    opacity:1;\n    transform: rotate(45deg) translate(20px, 20px);\n  }\n`;\nconst Down = styled.div`\n  display: block;\n  width: 20px;\n  height: 20px;\n  border-bottom: 1px solid #fff;\n  border-right: 1px solid #fff;\n  transform: rotate(45deg);\n  margin: -20px;\n  animation: ${animate} 1.5s infinite;\n  :nth-child(2) {\n    animation-delay: 0.2s;\n    transform: rotate(45deg) translate(-20px, -20px);\n  }\n  :nth-child(3) {\n    animation-delay: 0.4s;\n  }\n`;\n\nconst ScrollDownIndicator = () => {\n  return (\n    <Container>\n      <Down></Down>\n      <Down></Down>\n      <Down></Down>\n    </Container>\n  );\n};\n\nexport default ScrollDownIndicator;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link, animateScroll as scroll } from \"react-scroll\";\nimport { FaGithub } from \"react-icons/fa\";\nimport HRProfile from \"./images/hr.jpeg\";\nimport SMProfile from \"./images/sm.jpeg\";\nimport GWProfile from \"./images/gw.jpeg\";\nimport HGProfile from \"./images/hg.jpeg\";\nimport TSProfile from \"./images/ts.jpeg\";\nimport ScrollDownIndicator from \"./ScrollDownIndicator\";\n\nconst Container = styled.div`\n  background-color: #262626;\n`;\nconst Team = styled.section`\n  display: flex;\n  flex-direction: column;\n  padding: 50px 0;\n  height: 100vh;\n  box-sizing: border-box;\n`;\nconst Next = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\nconst Contents = styled.div`\n  width: 80%;\n  margin: 50px auto;\n  @media (max-width: 992px) {\n    width: 90%;\n    margin: 20px auto;\n  }\n`;\nconst Row = styled.div`\n  position: relative;\n  margin-top: ${({ marginTop }) => marginTop && marginTop};\n  width: 100%;\n  box-sizing: border-box;\n  cursor: pointer;\n`;\nconst H1 = styled.h1`\n  color: #fff;\n  text-align: center;\n  padding: 0;\n  margin: 0;\n  font-weight: 700;\n  font-size: 48px;\n  text-transform: uppercase;\n`;\nconst P = styled.p`\n  margin: 20px 0 0;\n  color: #fff;\n  padding-left: 20px;\n  border-left: 5px solid #f00;\n  font-size: 18px;\n`;\nconst Column = styled.div`\n  margin: 0px 10px;\n  position: relative;\n  width: calc(20% - 20px);\n  min-height: 250px;\n  background-color: #fff;\n  float: left;\n  overflow: hidden;\n  &:before {\n    content: \"\";\n    position: absolute;\n    bottom: -100%;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.9);\n    z-index: 1;\n    transition: 0.3s;\n    mix-blend-mode: soft-light;\n  }\n  :hover:before {\n    bottom: 0;\n  }\n  :hover {\n    div {\n      bottom: 0;\n      img {\n        transform: scale(1.5);\n      }\n    }\n  }\n  @media (max-width: 992px) {\n    width: calc(50% - 20px);\n    margin-bottom: 20px;\n  }\n  @media (max-width: 600px) {\n    width: calc(100% - 20px);\n    margin-bottom: 20px;\n  }\n`;\nconst ImgBox = styled.div`\n  position: relative;\n`;\nconst Image = styled.img`\n  width: 100%;\n  transition: 3s;\n`;\nconst Details = styled.div`\n  position: absolute;\n  bottom: -85px;\n  left: 0;\n  padding: 10px;\n  box-sizing: border-box;\n  background-color: rgba(0, 0, 0, 0.9);\n  width: 100%;\n  transition: 0.3s;\n  z-index: 2;\n`;\nconst Name = styled.h3`\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  padding: 0;\n  color: #fff;\n  font-weight: 500;\n  text-align: right;\n  text-transform: uppercase;\n`;\nconst Job = styled.span`\n  margin: 0;\n  padding: 0;\n  color: #f00;\n  font-size: 14px;\n  font-weight: 900;\n  text-transform: uppercase;\n  position: relative;\n  top: -6px;\n`;\nconst IconWrapper = styled.ul`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  float: right;\n`;\nconst IconBox = styled.li`\n  list-style: none;\n  padding: 0 10px;\n  color: #fff;\n  transition: 0.5s;\n  :hover {\n    color: #f00;\n    transform: rotateY(360deg);\n  }\n`;\n\nconst App = () => {\n  useEffect(() => {\n    document.body.style.margin = 0;\n    document.body.style.backgroundColor = \"#262626\";\n  }, []);\n\n  const values = [\n    {\n      isSelected: true,\n      comment: \"엘론 머스크를 꿈꾸는 디자이너입니다1.\",\n      title: \"Kim su min\",\n      job: \"Designer\",\n      thumbnail: HRProfile,\n    },\n    {\n      isSelected: false,\n      comment: \"엘론 머스크를 꿈꾸는 디자이너입니다2.\",\n      title: \"Kim su min\",\n      job: \"Designer\",\n      thumbnail: SMProfile,\n    },\n    {\n      isSelected: false,\n      comment: \"엘론 머스크를 꿈꾸는 디자이너입니다3.\",\n      title: \"Kim su min\",\n      job: \"Designer\",\n      thumbnail: GWProfile,\n    },\n    {\n      isSelected: false,\n      comment: \"엘론 머스크를 꿈꾸는 디자이너입니다4.\",\n      title: \"Kim su min\",\n      job: \"Designer\",\n      thumbnail: HGProfile,\n    },\n    {\n      isSelected: false,\n      comment: \"엘론 머스크를 꿈꾸는 디자이너입니다5.\",\n      title: \"Kim su min\",\n      job: \"Designer\",\n      thumbnail: TSProfile,\n    },\n  ];\n\n  const [profileValues, setProfileValues] = useState(values);\n\n  const handleClick = (index) => {\n    const updateValues = profileValues.map((item, i) =>\n      i !== index\n        ? { ...item, isSelected: false }\n        : { ...item, isSelected: true }\n    );\n    setProfileValues(updateValues);\n  };\n\n  return (\n    <Container>\n      <Team>\n        <>\n          <Contents>\n            <Row>\n              <H1>Our Team</H1>\n              {profileValues.map(\n                (value) => value.isSelected && <P>{value.comment}</P>\n              )}\n            </Row>\n            {profileValues.map((value, index) => (\n              <Row\n                marginTop=\"50px\"\n                onClick={() => {\n                  handleClick(index);\n                }}\n              >\n                <Column>\n                  <ImgBox>\n                    <Image src={value.thumbnail}></Image>\n                  </ImgBox>\n                  <Details>\n                    <Name>\n                      {value.title}\n                      <Job>{value.job}</Job>\n                    </Name>\n                    <IconWrapper>\n                      <IconBox>\n                        <FaGithub></FaGithub>\n                      </IconBox>\n                      <IconBox>\n                        <FaGithub></FaGithub>\n                      </IconBox>\n                      <IconBox>\n                        <FaGithub></FaGithub>\n                      </IconBox>\n                      <IconBox>\n                        <FaGithub></FaGithub>\n                      </IconBox>\n                    </IconWrapper>\n                  </Details>\n                </Column>\n              </Row>\n            ))}\n          </Contents>\n        </>\n        <Next>\n          <Link\n            activeClass=\"active\"\n            className=\"test1\"\n            to=\"test2\"\n            spy={true}\n            smooth={true}\n            duration={500}\n          >\n            <ScrollDownIndicator></ScrollDownIndicator>\n          </Link>\n        </Next>\n      </Team>\n      <Team>\n        <Link\n          activeClass=\"active\"\n          className=\"test2\"\n          to=\"test3\"\n          spy={true}\n          smooth={true}\n          duration={500}\n        ></Link>\n      </Team>\n    </Container>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}